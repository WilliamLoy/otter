API v1.0 release, December 08, 2015
-----------------------------------

What's new
~~~~~~~~~~

*  Added a new :ref:`**converge** endpoint <post-create-scaling-group-v1.1-tenantid-converge>`. You can submit a **POST** request to this endpoint to trigger convergence. Convergence implies that Autoscale tries to continuously converge to the desired state of the scaling group, instead of manipulating servers only once.
   When this convergence process starts, it will continue until the desired number of servers are in **ACTIVE** state.

*  Added the `status` attribute for group state. This attribute can be either "ACTIVE" or "ERROR". An "ACTIVE" status means that the group is converging
   and everything is operating well. An "ERROR" status means that Autoscale has stopped converging due to an irrecoverable error that requires user attention.
   If the `status` attribute is set to "ERROR", an additional `errors` attribute is added that displays a list of errors that Autoscale has encountered.

*  Added support for "pause". Pausing a scaling group cancels any executions on the group.
   This includes policy executions via the API or scheduled scaling activities, as well as triggering convergence. Any existing convergence that is running will be stopped. Group configuration changes are allowed during a paused state.
   If a scaling group is paused, the group state will return `"paused": true`.

*  Added support for "resume". Resuming a scaling group ends the "pause" state. When a scaling group is resumed,
   policy executions and convergence triggering resume. The group state returns `"paused": false`.

Behavioral changes
~~~~~~~~~~~~~~~~~~

* If a user makes manual load balancer changes to autoscaled servers (such as moving them to a different load balancer,
  or just adding them to a load balancer autoscale does not know about), autoscale will will revert said change and
  make sure they are ONLY on the load balancers they were configured to be on.

* If a CLB configured in the group is not found / deleted, the group will be put in ERROR and server that was supposed to be added to CLB *will remain*.
  This is unlike current behavior where the server that couldn't be added to CLB gets deleted.

Known issues
~~~~~~~~~~~~
|no changes|
